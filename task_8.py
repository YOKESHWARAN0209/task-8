# -*- coding: utf-8 -*-
"""task 8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zfuRh3y_ld1tzPv2os0v8nnfDt1gTNAo
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.preprocessing import StandardScaler

url = "https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv"
data = pd.read_csv(url)

print(data.head())
print(data.info())

X = data.select_dtypes(include=[np.number])
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

inertia = []
K = range(1, 11)

for k in K:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X_scaled)
    inertia.append(kmeans.inertia_)

plt.plot(K, inertia, 'bx-')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.title('Elbow Method For Optimal k')
plt.show()

kmeans = KMeans(n_clusters=3, random_state=42)
labels = kmeans.fit_predict(X_scaled)
data['Cluster'] = labels
print(data.head())

score = silhouette_score(X_scaled, labels)
print("Silhouette Score:", score)

from sklearn.decomposition import PCA

pca = PCA(2)
X_pca = pca.fit_transform(X_scaled)

plt.figure(figsize=(8,6))
plt.scatter(X_pca[:,0], X_pca[:,1], c=labels, cmap='viridis', s=50)
plt.title('Clusters Visualized (PCA 2D)')
plt.xlabel('PC1')
plt.ylabel('PC2')
plt.show()